package com.nagihong.mvp.database.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.nagihong.mvp.model.DocumentBean;
import com.nagihong.mvp.model.FileBean;
import com.nagihong.mvp.model.MusicBean;
import com.nagihong.mvp.model.PhotoBean;
import com.nagihong.mvp.model.UserBean;

import com.nagihong.mvp.database.greendao.DocumentBeanDao;
import com.nagihong.mvp.database.greendao.FileBeanDao;
import com.nagihong.mvp.database.greendao.MusicBeanDao;
import com.nagihong.mvp.database.greendao.PhotoBeanDao;
import com.nagihong.mvp.database.greendao.UserBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig documentBeanDaoConfig;
    private final DaoConfig fileBeanDaoConfig;
    private final DaoConfig musicBeanDaoConfig;
    private final DaoConfig photoBeanDaoConfig;
    private final DaoConfig userBeanDaoConfig;

    private final DocumentBeanDao documentBeanDao;
    private final FileBeanDao fileBeanDao;
    private final MusicBeanDao musicBeanDao;
    private final PhotoBeanDao photoBeanDao;
    private final UserBeanDao userBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        documentBeanDaoConfig = daoConfigMap.get(DocumentBeanDao.class).clone();
        documentBeanDaoConfig.initIdentityScope(type);

        fileBeanDaoConfig = daoConfigMap.get(FileBeanDao.class).clone();
        fileBeanDaoConfig.initIdentityScope(type);

        musicBeanDaoConfig = daoConfigMap.get(MusicBeanDao.class).clone();
        musicBeanDaoConfig.initIdentityScope(type);

        photoBeanDaoConfig = daoConfigMap.get(PhotoBeanDao.class).clone();
        photoBeanDaoConfig.initIdentityScope(type);

        userBeanDaoConfig = daoConfigMap.get(UserBeanDao.class).clone();
        userBeanDaoConfig.initIdentityScope(type);

        documentBeanDao = new DocumentBeanDao(documentBeanDaoConfig, this);
        fileBeanDao = new FileBeanDao(fileBeanDaoConfig, this);
        musicBeanDao = new MusicBeanDao(musicBeanDaoConfig, this);
        photoBeanDao = new PhotoBeanDao(photoBeanDaoConfig, this);
        userBeanDao = new UserBeanDao(userBeanDaoConfig, this);

        registerDao(DocumentBean.class, documentBeanDao);
        registerDao(FileBean.class, fileBeanDao);
        registerDao(MusicBean.class, musicBeanDao);
        registerDao(PhotoBean.class, photoBeanDao);
        registerDao(UserBean.class, userBeanDao);
    }
    
    public void clear() {
        documentBeanDaoConfig.clearIdentityScope();
        fileBeanDaoConfig.clearIdentityScope();
        musicBeanDaoConfig.clearIdentityScope();
        photoBeanDaoConfig.clearIdentityScope();
        userBeanDaoConfig.clearIdentityScope();
    }

    public DocumentBeanDao getDocumentBeanDao() {
        return documentBeanDao;
    }

    public FileBeanDao getFileBeanDao() {
        return fileBeanDao;
    }

    public MusicBeanDao getMusicBeanDao() {
        return musicBeanDao;
    }

    public PhotoBeanDao getPhotoBeanDao() {
        return photoBeanDao;
    }

    public UserBeanDao getUserBeanDao() {
        return userBeanDao;
    }

}
